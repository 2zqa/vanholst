name: Build and release APKs

on:
  push:
    tags: 'v*.*.*'

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PUBSPEC_VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: //')
          if [ "$TAG_VERSION" != "$PUBSPEC_VERSION" ]; then
            echo "Version mismatch: tag version is $TAG_VERSION but pubspec.yaml version is $PUBSPEC_VERSION" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-version
    steps:
      - uses: actions/checkout@v4

      - name: Configure Keystore
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_KEY_ALIAS: ${{ vars.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Restore packages
        run: flutter pub get

      - name: Build arm64 APK
        run: flutter build apk --target-platform android-arm64 --split-per-abi

      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/flutter-apk/*.apk.sha1

  release:
    name: "Release"
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # For creating a release
    steps:
      - uses: actions/download-artifact@v4
        id: download
        with:
          name: build
      - name: "Create Release"
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          prerelease: ${{ startsWith(github.ref, 'refs/tags/v0') }}
          files: ${{ steps.download.outputs.download-path }}/* # Upload all files from the artifact
